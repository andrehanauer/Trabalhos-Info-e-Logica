/* ************************************************************************ *
*    Algoritmo gpt, raiz da babilonia                                      *
*    Resolve raizes pelo metodo babilonico                                 *
*                                                                          *
*    Copyright (C) 2019 by Andre Hanauer Navarro                           *
*                                                                          *
*    This program is free software; you can redistribute it and/or modify  *
*    it under the terms of the GNU General Public License as published by  *
*    the Free Software Foundation; either version 2 of the License, or     *
*    (at your option) any later version.                                   *
*                                                                          *
*    This program is distributed in the hope that it will be useful,       *
*    but WITHOUT ANY WARRANTY; without even the implied warranty of        *
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
*    GNU General Public License for more details.                          *
*                                                                          *
*    You should have received a copy of the GNU General Public License     *
*    along with this program; if not, write to the                         *
*    Free Software Foundation, Inc.,                                       *
*    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
*                                                                          *
*    To contact the author, please write to:                               *
*    Andre Hanauer Navarro <andrehanauern@gmail.com>                       *
*    Webpage: http://www.github.com/andrehanauer                            *
*    Phone: +55 (81) 99177-4250                                            *
* ************************************************************************ *
* 
*/

algoritmo raiz;

variáveis

numero : real;
y : real;
p : real;

fim-variáveis

início

    imprima("De que numero deseja obter a raiz:");
    numero := leia();    
    imprima("A raiz de numero eh:", raiz(numero)); 

fim

função raiz(numero: real) : real

início

    y := numero;

    enquanto (numero - p) > 0.0001 faça
        numero := ( numero + p)/2;
        p := y / numero;
        fim-enquanto

        retorne numero;
fim

